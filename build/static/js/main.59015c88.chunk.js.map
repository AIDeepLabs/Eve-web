{"version":3,"sources":["assets/dogo.jpeg","assets/logo.svg","App.js","reportWebVitals.js","index.js"],"names":["image","video","theme","createTheme","tickCross","description","tick","cross","rows","Main","useState","loadingImagePrediction","setImageLoadingPrediction","imagePrediction","setImageImagePrediction","loadingVideoPrediction","setVideoLoadingPrediction","videoPrediction","setVideoPrediction","React","openn","setOpen","handleClose","event","reason","errorMessage","error","Snackbar","open","autoHideDuration","onClose","message","ThemeProvider","CssBaseline","Paper","sx","bgcolor","pt","pb","Container","maxWidth","Typography","component","variant","align","color","gutterBottom","Stack","spacing","direction","style","justifyContent","src","frameborder","scrolling","width","height","title","paragraph","Button","href","endIcon","backgroundColor","py","dogo","alignSelf","alt","showLineNumbers","language","id","filesLimit","acceptedFiles","dropzoneText","onChange","files","onClick","console","log","undefined","formdata","FormData","append","fetch","method","body","dataType","then","response","text","catch","predictImage","LinearProgress","replaceAll","maxFileSize","predictVideo","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","TableBody","map","row","scope","TextField","label","inputProps","inputMode","Box","p","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59015c88.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dogo.eea15ace.jpeg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M29.8047 37.0938H15.5078L12.2969 46H7.65625L20.6875 11.875H24.625L37.6797 46H33.0625L29.8047 37.0938ZM16.8672 33.3906H28.4688L22.6562 17.4297L16.8672 33.3906ZM47.1016 46H42.6016V11.875H47.1016V46ZM67.2578 46V11.875H76.8906C79.8594 11.875 82.4844 12.5312 84.7656 13.8438C87.0469 15.1562 88.8047 17.0234 90.0391 19.4453C91.2891 21.8672 91.9219 24.6484 91.9375 27.7891V29.9688C91.9375 33.1875 91.3125 36.0078 90.0625 38.4297C88.8281 40.8516 87.0547 42.7109 84.7422 44.0078C82.4453 45.3047 79.7656 45.9688 76.7031 46H67.2578ZM71.7578 15.5781V42.3203H76.4922C79.9609 42.3203 82.6562 41.2422 84.5781 39.0859C86.5156 36.9297 87.4844 33.8594 87.4844 29.875V27.8828C87.4844 24.0078 86.5703 21 84.7422 18.8594C82.9297 16.7031 80.3516 15.6094 77.0078 15.5781H71.7578ZM108.602 46.4688C105.164 46.4688 102.367 45.3438 100.211 43.0938C98.0547 40.8281 96.9766 37.8047 96.9766 34.0234V33.2266C96.9766 30.7109 97.4531 28.4688 98.4062 26.5C99.375 24.5156 100.719 22.9688 102.438 21.8594C104.172 20.7344 106.047 20.1719 108.062 20.1719C111.359 20.1719 113.922 21.2578 115.75 23.4297C117.578 25.6016 118.492 28.7109 118.492 32.7578V34.5625H101.312C101.375 37.0625 102.102 39.0859 103.492 40.6328C104.898 42.1641 106.68 42.9297 108.836 42.9297C110.367 42.9297 111.664 42.6172 112.727 41.9922C113.789 41.3672 114.719 40.5391 115.516 39.5078L118.164 41.5703C116.039 44.8359 112.852 46.4688 108.602 46.4688ZM108.062 23.7344C106.312 23.7344 104.844 24.375 103.656 25.6562C102.469 26.9219 101.734 28.7031 101.453 31H114.156V30.6719C114.031 28.4688 113.438 26.7656 112.375 25.5625C111.312 24.3438 109.875 23.7344 108.062 23.7344ZM134.055 46.4688C130.617 46.4688 127.82 45.3438 125.664 43.0938C123.508 40.8281 122.43 37.8047 122.43 34.0234V33.2266C122.43 30.7109 122.906 28.4688 123.859 26.5C124.828 24.5156 126.172 22.9688 127.891 21.8594C129.625 20.7344 131.5 20.1719 133.516 20.1719C136.812 20.1719 139.375 21.2578 141.203 23.4297C143.031 25.6016 143.945 28.7109 143.945 32.7578V34.5625H126.766C126.828 37.0625 127.555 39.0859 128.945 40.6328C130.352 42.1641 132.133 42.9297 134.289 42.9297C135.82 42.9297 137.117 42.6172 138.18 41.9922C139.242 41.3672 140.172 40.5391 140.969 39.5078L143.617 41.5703C141.492 44.8359 138.305 46.4688 134.055 46.4688ZM133.516 23.7344C131.766 23.7344 130.297 24.375 129.109 25.6562C127.922 26.9219 127.188 28.7031 126.906 31H139.609V30.6719C139.484 28.4688 138.891 26.7656 137.828 25.5625C136.766 24.3438 135.328 23.7344 133.516 23.7344ZM170.406 33.6016C170.406 37.4609 169.523 40.5703 167.758 42.9297C165.992 45.2891 163.602 46.4688 160.586 46.4688C157.508 46.4688 155.086 45.4922 153.32 43.5391V55.75H148.984V20.6406H152.945L153.156 23.4531C154.922 21.2656 157.375 20.1719 160.516 20.1719C163.562 20.1719 165.969 21.3203 167.734 23.6172C169.516 25.9141 170.406 29.1094 170.406 33.2031V33.6016ZM166.07 33.1094C166.07 30.25 165.461 27.9922 164.242 26.3359C163.023 24.6797 161.352 23.8516 159.227 23.8516C156.602 23.8516 154.633 25.0156 153.32 27.3438V39.4609C154.617 41.7734 156.602 42.9297 159.273 42.9297C161.352 42.9297 163 42.1094 164.219 40.4688C165.453 38.8125 166.07 36.3594 166.07 33.1094ZM181.141 42.3203H197.312V46H176.617V11.875H181.141V42.3203ZM217.422 46C217.172 45.5 216.969 44.6094 216.812 43.3281C214.797 45.4219 212.391 46.4688 209.594 46.4688C207.094 46.4688 205.039 45.7656 203.43 44.3594C201.836 42.9375 201.039 41.1406 201.039 38.9688C201.039 36.3281 202.039 34.2812 204.039 32.8281C206.055 31.3594 208.883 30.625 212.523 30.625H216.742V28.6328C216.742 27.1172 216.289 25.9141 215.383 25.0234C214.477 24.1172 213.141 23.6641 211.375 23.6641C209.828 23.6641 208.531 24.0547 207.484 24.8359C206.438 25.6172 205.914 26.5625 205.914 27.6719H201.555C201.555 26.4062 202 25.1875 202.891 24.0156C203.797 22.8281 205.016 21.8906 206.547 21.2031C208.094 20.5156 209.789 20.1719 211.633 20.1719C214.555 20.1719 216.844 20.9062 218.5 22.375C220.156 23.8281 221.016 25.8359 221.078 28.3984V40.0703C221.078 42.3984 221.375 44.25 221.969 45.625V46H217.422ZM210.227 42.6953C211.586 42.6953 212.875 42.3438 214.094 41.6406C215.312 40.9375 216.195 40.0234 216.742 38.8984V33.6953H213.344C208.031 33.6953 205.375 35.25 205.375 38.3594C205.375 39.7188 205.828 40.7812 206.734 41.5469C207.641 42.3125 208.805 42.6953 210.227 42.6953ZM249.344 33.6016C249.344 37.4766 248.453 40.5938 246.672 42.9531C244.891 45.2969 242.5 46.4688 239.5 46.4688C236.297 46.4688 233.82 45.3359 232.07 43.0703L231.859 46H227.875V10H232.211V23.4297C233.961 21.2578 236.375 20.1719 239.453 20.1719C242.531 20.1719 244.945 21.3359 246.695 23.6641C248.461 25.9922 249.344 29.1797 249.344 33.2266V33.6016ZM245.008 33.1094C245.008 30.1562 244.438 27.875 243.297 26.2656C242.156 24.6562 240.516 23.8516 238.375 23.8516C235.516 23.8516 233.461 25.1797 232.211 27.8359V38.8047C233.539 41.4609 235.609 42.7891 238.422 42.7891C240.5 42.7891 242.117 41.9844 243.273 40.375C244.43 38.7656 245.008 36.3438 245.008 33.1094ZM269.594 39.2734C269.594 38.1016 269.148 37.1953 268.258 36.5547C267.383 35.8984 265.844 35.3359 263.641 34.8672C261.453 34.3984 259.711 33.8359 258.414 33.1797C257.133 32.5234 256.18 31.7422 255.555 30.8359C254.945 29.9297 254.641 28.8516 254.641 27.6016C254.641 25.5234 255.516 23.7656 257.266 22.3281C259.031 20.8906 261.281 20.1719 264.016 20.1719C266.891 20.1719 269.219 20.9141 271 22.3984C272.797 23.8828 273.695 25.7812 273.695 28.0938H269.336C269.336 26.9062 268.828 25.8828 267.812 25.0234C266.812 24.1641 265.547 23.7344 264.016 23.7344C262.438 23.7344 261.203 24.0781 260.312 24.7656C259.422 25.4531 258.977 26.3516 258.977 27.4609C258.977 28.5078 259.391 29.2969 260.219 29.8281C261.047 30.3594 262.539 30.8672 264.695 31.3516C266.867 31.8359 268.625 32.4141 269.969 33.0859C271.312 33.7578 272.305 34.5703 272.945 35.5234C273.602 36.4609 273.93 37.6094 273.93 38.9688C273.93 41.2344 273.023 43.0547 271.211 44.4297C269.398 45.7891 267.047 46.4688 264.156 46.4688C262.125 46.4688 260.328 46.1094 258.766 45.3906C257.203 44.6719 255.977 43.6719 255.086 42.3906C254.211 41.0938 253.773 39.6953 253.773 38.1953H258.109C258.188 39.6484 258.766 40.8047 259.844 41.6641C260.938 42.5078 262.375 42.9297 264.156 42.9297C265.797 42.9297 267.109 42.6016 268.094 41.9453C269.094 41.2734 269.594 40.3828 269.594 39.2734Z\",\n  fill: \"black\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 2,\n  y: 2,\n  width: 53,\n  height: 57,\n  stroke: \"black\",\n  strokeWidth: 4\n});\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 277,\n    height: 61,\n    viewBox: \"0 0 277 61\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.7ad73f9c.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from \"react\";\nimport {useState} from \"react\"\nimport AppBar from \"@mui/material/AppBar\";\nimport Button from \"@mui/material/Button\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport Paper from \"@mui/material/Paper\";\nimport CollectionsBookmarkIcon from '@mui/icons-material/CollectionsBookmark';\nimport TextField from \"@mui/material/TextField\";\nimport dogo from \"./assets/dogo.jpeg\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport ScienceIcon from '@mui/icons-material/Science';\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { ReactComponent as Logo } from \"./assets/logo.svg\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport {Snackbar, Accordion , AccordionSummary, AccordionDetails} from \"@mui/material\";\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nconst theme = createTheme();\n\nconst tickCross = (description, tick, cross) => {\n    return { description, tick, cross };\n};\n\nconst rows = [\n    tickCross(\"Make accurate predictions\", \"✔️\", \"✔️\"),\n    tickCross(\"No Machine Learning expertise needed\", \"✔️\", \"✔️\"),\n    tickCross(\"No training data needed\", \"✔️\", \"✔️\"),\n    tickCross(\n        \"Able to integrate Video and Image recognition into your app \",\n        \"✔️\",\n        \"✔️\"\n    ),\n    tickCross(\n        \"Always learning and getting the latest models \",\n        \"✔️\",\n        \"Will pull updates every week from Cloud EVE\"\n    ),\n    tickCross(\"No need to setup infrastructure\", \"✔️\", \"X\"),\n    tickCross(\"No need to maintain Eve\", \"✔️\", \"X\"),\n    tickCross(\"Free\", \"Will always have a free tier\", \"✔️\"),\n];\n\nvar image;\nvar video;\n\n\nexport default function Main() {\n    const [loadingImagePrediction, setImageLoadingPrediction] = useState(false);\n    const [imagePrediction, setImageImagePrediction] = useState(null);\n    const [loadingVideoPrediction, setVideoLoadingPrediction] = useState(false);\n    const [videoPrediction, setVideoPrediction] = useState(null);\n    const [openn, setOpen] = React.useState(false);\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpen(false);\n      };\n    const predictImage = (image) => {\n        console.log(image);\n        if (image === undefined) {\n            console.log(\"No Image found\");\n            return 0;\n        }\n        setImageLoadingPrediction(true);\n        setImageImagePrediction(null);\n\n        var formdata = new FormData();\n        formdata.append(\"image\", image);\n    \n        var requestOptions = {\n            method: \"POST\",\n            body: formdata,\n            // mode: \"no-cors\",\n            dataType: \"text\",\n        };\n    \n        fetch(\"https://api.aideeplabs.com/detectObjectsInImage\", requestOptions)\n            .then((response) => {console.log(response); return response.text()})\n            .then((message) => {setImageImagePrediction(message); setImageLoadingPrediction(false)})\n            .catch((error) => errorMessage(error));\n    };\n    const errorMessage=(error)=>{\n        // console.log(error);\n        return (<Snackbar\n  open={openn}\n  autoHideDuration={6000}\n  onClose={handleClose}\n  message={\"error\"}\n//   action={action}\n/>);\n    }\n\n    const predictVideo = (video) => {\n        if (video === undefined) {\n            console.log(\"No Video found\");\n            return 0;\n        }\n        setVideoLoadingPrediction(true);\n        setVideoPrediction(null);\n        var formdata = new FormData();\n        formdata.append(\"video\", video);\n        var requestOptions = {\n            method: \"POST\",\n            body: formdata,\n            // mode: \"no-cors\",\n            dataType: \"text\",\n        };\n        fetch(\"https://api.aideeplabs.com/detectObjectsInVideo\", requestOptions)\n            .then((response) => {console.log(response); return response.text()})\n            .then((message) => {setVideoPrediction(message); setVideoLoadingPrediction(false)})\n            .catch((error) => errorMessage(error));\n    };\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            {/* <AppBar position=\"relative\">\n        <Toolbar>\n          {/* <Logo style={{width:\"30%\"}} stroke=\"white\" fill=\"white\"/> *}\n          \n        </Toolbar>\n      </AppBar> */}\n            <main>\n                <Paper\n                    sx={{\n                        bgcolor: \"background.paper\",\n                        pt: 8,\n                        pb: 6,\n                    }}\n                >\n                    <Container maxWidth=\"sm\">\n                        <Typography\n                            component=\"h1\"\n                            variant=\"h2\"\n                            align=\"center\"\n                            color=\"text.primary\"\n                            gutterBottom\n                        >\n                            EVE\n                        </Typography>\n                        <Stack\n                            spacing={1}\n                            direction={\"row\"}\n                            style={{ justifyContent: \"center\" }}\n                        >\n                            <iframe\n                                src=\"https://ghbtns.com/github-btn.html?user=AIDeepLabs&repo=WinningEve-Server&type=star&count=true\"\n                                frameborder=\"0\"\n                                scrolling=\"0\"\n                                width=\"150\"\n                                height=\"20\"\n                                title=\"GitHub\"\n                            ></iframe>\n                            <iframe\n                                src=\"https://ghbtns.com/github-btn.html?user=AIDeepLabs&repo=WinningEve-Server&type=watch&count=true&v=2\"\n                                frameborder=\"0\"\n                                scrolling=\"0\"\n                                width=\"150\"\n                                height=\"20\"\n                                title=\"GitHub\"\n                            ></iframe>\n                            <iframe\n                                src=\"https://ghbtns.com/github-btn.html?user=AIDeepLabs&repo=WinningEve-Server&type=fork&count=true\"\n                                frameborder=\"0\"\n                                scrolling=\"0\"\n                                width=\"150\"\n                                height=\"20\"\n                                title=\"GitHub\"\n                            ></iframe>\n                        </Stack>\n\n                        <br />\n                        <Typography\n                            variant=\"h6\"\n                            align=\"center\"\n                            color=\"text.secondary\"\n                            paragraph\n                        >\n                            An open-source, free, REST Solution For Image and\n                            Video Recognition for your next project.\n                        </Typography>\n                        <br />\n                        <Stack\n                            direction=\"row\"\n                            spacing={1}\n                            style={{ justifyContent: \"center\" }}\n                        >\n                            <Button variant=\"contained\" href={\"#tryItOut\"} endIcon={<ScienceIcon/>}>\n                                Try It Out\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                href=\"https://github.com/AIDeepLabs/WinningEve-Server\"\n                                style={{\n                                    backgroundColor: \"#333\",\n                                    color: \"#FFFFFF\",\n                                }}\n                                endIcon={<GitHubIcon />}\n                            >\n                                View on GitHub\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                href=\"https://documenter.getpostman.com/view/10049267/UVJhEFMH\"\n                                style={{\n                                    backgroundColor: \"#EF5B25\",\n                                    color: \"#FFFFFF\",\n                                }}\n                                endIcon={<CollectionsBookmarkIcon />}\n                            >\n                                View API Docs\n                            </Button>\n                        </Stack>\n                    </Container>\n                </Paper>\n                <Paper>\n                    <Container sx={{ py: 8 }} maxWidth=\"lg\">\n                        <Stack spacing={2}>\n                            <Typography variant=\"h5\">\n                                Why does EVE exists?\n                            </Typography>\n                            <Typography variant=\"body1\">\n                                Ever wanted to add a bit of image or video\n                                recognition into your application, but didn’t\n                                know where to get started? Also wanted to use a\n                                solution which is open-source and free to use\n                                and not proprietary and hidden behind mysterious\n                                companies? <br /> <br /> I faced this problem\n                                when I wanted to create an app to sort out\n                                photos and videos. Unfortunately, all the\n                                solutions I found were paid or the solutions\n                                were proprietary and no information was on how\n                                they functioned. <br /> <br /> I decided to\n                                create EVE, a free, open-source, REST API\n                                solution for image and video recognition.\n                            </Typography>\n                            \n\n                            <Stack\n                                sx={{ pt: 4 }}\n                                direction=\"column\"\n                                spacing={2}\n                                justifyContent=\"center\"\n                            >\n                                <Typography variant=\"h5\">\n                                The Power of EVE through example\n                            </Typography>\n                                <Typography variant=\"body1\">\n                                    Lets pass EVE an image lets say this cute\n                                    doggo one:\n                                </Typography>\n                                <img\n                                    src={dogo}\n                                    style={{\n                                        width: \"30%\",\n                                        alignSelf: \"center\",\n                                    }}\n                                    alt=\"dogo\"\n                                />\n\n                                <Typography variant=\"body1\">\n                                    We can send EVE multiple ways as it is just\n                                    a REST service lets use CURL, to send an\n                                    image to EVE to identify.\n                                </Typography>\n                                <SyntaxHighlighter\n                                    showLineNumbers\n                                    language=\"bash\"\n                                >\n                                    curl --location --request POST\n                                    'https://aideeplabs/EVE/detectObjectsInImage'\n                                    --form 'image=@\"dogo.jpeg\"'\n                                </SyntaxHighlighter>\n                                <Typography variant=\"body1\">\n                                    EVE is lightning quick and accurate as it is\n                                    built using multiple models such as ResNet.\n                                    EVE then responds back in a JSON format.\n                                </Typography>\n                                <SyntaxHighlighter\n                                    showLineNumbers\n                                    language=\"json\"\n                                >\n                                    {`{\n  \"Lhasa\": 0.02862674929201603,\n  \"Maltese dog\": 0.9127932190895081,\n  \"Shih-Tzu\": 0.00895776879042387,\n  \"Tibetan terrier\": 0.018368251621723175,\n  \"toy poodle\": 0.012540102936327457\n}`}\n                                </SyntaxHighlighter>\n                                <Typography variant=\"body1\">\n                                    Here we see that EVE has accurately\n                                    identifies the image as a Maltese doggo with\n                                    a 91% accuracy.\n                                </Typography>\n                            </Stack>\n\n                            <Typography id={\"tryItOut\"} variant=\"h5\">\n                                Try It Out\n                            </Typography>\n                            <Typography variant=\"body1\">\n                                EVE can predict videos and images. Feel free to\n                                try your own images and videos. Please note that the images and videos have a quota based on the amount of requests you make. If you exceed the quota you will be blocked, this is so everyone can try the prototype of EVE. Also feel free to run your own code, here is the documentation for EVE: <a href=\"https://documenter.getpostman.com/view/10049267/UVJhEFMH\">Documentation</a>\n                            </Typography>\n                            <Typography variant=\"h6\">Images</Typography>\n                            <Typography variant=\"body1\">\n                                Pick an Image to send to EVE for a prediction.\n                            </Typography>\n                            <DropzoneArea\n                                filesLimit={1}\n                                acceptedFiles={[\"image/*\"]}\n                                dropzoneText={\n                                    \"Drag and drop an image here or click\"\n                                }\n                                onChange={(files) => (image = files[0])}\n                            />\n                            <Button\n                                variant=\"contained\"\n                                onClick={() => predictImage(image)}\n                            >\n                                Predict\n                            </Button>\n                            {loadingImagePrediction && <LinearProgress />}\n                            {imagePrediction && <SyntaxHighlighter\n                                    showLineNumbers\n                                    language=\"json\"\n                                >{imagePrediction.replaceAll(\",\",\",\\n\")}</SyntaxHighlighter>}\n\n                            <Typography variant=\"h6\">Videos</Typography>\n                            <Typography variant=\"body1\">\n                                Pick an Video to send to EVE for a prediction.\n                            </Typography>\n                            <DropzoneArea\n                                filesLimit={1}\n                                acceptedFiles={[\"video/*\"]}\n                                maxFileSize={1024 * 1024 * 100}\n                                dropzoneText={\n                                    \"Drag and drop an video here or click\"\n                                }\n                                onChange={(files) => (video = files[0])}\n                            />\n                            <Button\n                                variant=\"contained\"\n                                onClick={() => predictVideo(video)}\n                            >\n                                Predict\n                            </Button>\n                          \n                            {loadingVideoPrediction && <LinearProgress />}\n                            {videoPrediction && <SyntaxHighlighter\n                                    showLineNumbers\n                                    language=\"json\"\n                                >{videoPrediction.replaceAll(\",\",\",\\n\")}</SyntaxHighlighter>}\n                            <Typography variant=\"h5\">EVEs flavours</Typography>\n                            <Typography variant=\"body1\">\n                                EVE is still being built in two flavours: cloud\n                                based and a standalone community version.\n                            </Typography>\n                            <TableContainer component={Paper}>\n                                <Table stickyHeader aria-label=\"simple table\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>Features</TableCell>\n                                            <TableCell>Cloud EVE</TableCell>\n                                            <TableCell>\n                                                Standalone Community EVE\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {rows.map((row) => (\n                                            <TableRow key={row.description}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.description}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.tick}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.cross}\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                            <Typography variant=\"h5\">\n                                Stay informed about upcoming updates by\n                                registering your email here:\n                            </Typography>\n                            <Stack\n                                sx={{ pt: 4 }}\n                                direction=\"row\"\n                                spacing={2}\n                                justifyContent=\"center\"\n                            >\n                                <TextField\n                                    label=\"Email\"\n                                    inputProps={{ inputMode: \"email\" }}\n                                />\n                                <Button variant=\"contained\">\n                                    Register your Interest\n                                </Button>\n                                \n                            </Stack>\n                            <Typography variant=\"body1\">\n                                If you have any feedback or comments feel free to email me at asim@poptani.com.\n                            </Typography>\n                        </Stack>\n                    </Container>\n                </Paper>\n            </main>\n            {/* Footer */}\n            <Box sx={{ bgcolor: \"background.paper\", p: 6 }} component=\"footer\">\n                <Typography\n                    variant=\"h6\"\n                    align=\"center\"\n                    gutterBottom\n                ></Typography>\n                <Typography\n                    variant=\"subtitle1\"\n                    align=\"center\"\n                    color=\"text.secondary\"\n                    component=\"p\"\n                ></Typography>\n            </Box>\n            {/* End footer */}\n        </ThemeProvider>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}